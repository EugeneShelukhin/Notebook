// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notebook.Data;

#nullable disable

namespace Notebook.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220617104454_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("Notebook.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TopicId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Notebook.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentTopicId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentTopicId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentTopicId1");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Notebook.Models.Topic", b =>
                {
                    b.HasOne("Notebook.Models.Topic", "ParentTopic")
                        .WithMany("NestedTopics")
                        .HasForeignKey("ParentTopicId1");

                    b.Navigation("ParentTopic");
                });

            modelBuilder.Entity("Notebook.Models.Topic", b =>
                {
                    b.Navigation("NestedTopics");
                });
#pragma warning restore 612, 618
        }
    }
}
